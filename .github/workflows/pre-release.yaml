name: (1) Release Preparation
on:
  workflow_dispatch:
    inputs:
      RELEASE_BRANCH:
        description: "Release branch name in the form of X.Y.Z"
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  create_release_branch:
    name: Create release branch
    runs-on: ubuntu-latest
    env:
      RELEASE_BRANCH: ${{ github.event.inputs.RELEASE_BRANCH }}
    steps:
      - name: Validate version
        run: |
          NUMBER='(0|[1-9][0-9]*)'
          echo ${RELEASE_BRANCH} | egrep "^$NUMBER.$NUMBER.$NUMBER?$"

      - name: Set the latest HZ and MC versions and Create Release Branch
        id: update_version
        run: |          
          HZ_LATEST_TAG=5.5.0
          MC_LATEST_TAG=5.5.0
          sed -i '/Version of Hazelcast Platform\./{n; /^\s*$/! {s#// +kubebuilder:default:="\([0-9][^"]*\)"#// +kubebuilder:default:="'"$HZ_LATEST_TAG"'"#;};}' api/v1alpha1/hazelcast_types.go
          sed -i '/Version of Management Center\./{n; /^\s*$/! {s#// +kubebuilder:default:="\([0-9][^"]*\)"#// +kubebuilder:default:="'"$MC_LATEST_TAG"'"#;};}' api/v1alpha1/managementcenter_types.go
          sed -i 's/HazelcastVersion = \".*\"/HazelcastVersion = \"'$HZ_LATEST_TAG'\"/' internal/naming/constants.go
          sed -i 's/MCVersion = \".*\"/MCVersion = \"'$MC_LATEST_TAG'\"/' internal/naming/constants.go
          grep -rl 'kind: Hazelcast' config/samples | xargs sed -i -E -e 's/(version: ).*/\1'"'$HZ_LATEST_TAG'"'/'
             make sync-manifests
             git checkout -b "update-hz-and-mc"
             git add .
             git commit --signoff -m "Update Hazelcast and MC version"
             git push -u origin "update-hz-and-mc"
             gh pr create --fill \
              --reviewer "hazelcast/cloud-native" \
              --label "non-release" \
              --milestone "${RELEASE_BRANCH}"  
             gh pr comment ${{ github.event.pull_request.number }} --body "/hold"

