name: 'Restore Release'

on:
  workflow_dispatch:

env:
  DOTNET_VERSION: '3.1.404'
  OPERATOR_NAME: "hazelcast-platform-operator"
  BUNDLE_RELEASE_VERSION: 5.13.0
  RELEASE_VERSION: 5.13.0

jobs:
  helm_chart_release:
    runs-on: ubuntu-latest
    outputs:
      HELM_CHART_PR_NUMBER: ${{ steps.helm_chart_pr.outputs.HELM_CHART_PR_NUMBER }}
    steps:
      - name: Checkout 'main' Branch
        uses: actions/checkout@v4
        with:
          repository: cheels/hazelcast-platform-operator
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}

      - name: Update Chart Version in Main Branch
        working-directory: helm-charts/hazelcast-platform-operator
        run: |
          REPLACED_VERSION=$(echo "$RELEASE_VERSION" | awk -F'.' '{print $1"."$2+1".0"}')
          echo "REPLACED_VERSION=${REPLACED_VERSION}" >> $GITHUB_ENV
          sed -i -E -e 's/(version: ).*/\1"'$REPLACED_VERSION-snapshot'"/' -e 's/(appVersion: ).*/\1"'$REPLACED_VERSION-snapshot'"/' charts/hazelcast-platform-operator-crds/Chart.yaml Chart.yaml

      - name: Commit and Push Changes
        working-directory: helm-charts/hazelcast-platform-operator
        run: |
          git config user.email "alexander.borschuk@hazelcast.com"
          git config user.name "cheels"
          BRANCH_NAME=update-helm-chart-to-${REPLACED_VERSION}
          git checkout -b $BRANCH_NAME
          git add .
          git commit --signoff -m "$(echo -e "Update helm chart to ${REPLACED_VERSION} version")"
          git push -u origin $BRANCH_NAME

      - name: Create PR to Main Branch
        id: helm_chart_pr
        run: |
          echo ${{ secrets.DEVOPS_GITHUB_TOKEN }} | gh auth login --with-token
          gh pr create --title "Update Helm Chart Version to ${REPLACED_VERSION}-snapshot" \
          --base main \
          --label "non-release" \
          --milestone "${RELEASE_VERSION}" \
          --body ""
          echo "HELM_CHART_PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

  deploy_bundle:
    runs-on: 'ubuntu-latest'
    needs: helm_chart_release
    strategy:
      fail-fast: false
      matrix:
        include:
          - repo-name: community-operators
            repo-owner: cheels

          - repo-name: certified-operators
            repo-owner: cheels

          - repo-name: community-operators-prod
            repo-owner: cheels
    env:
      REPO_NAME: ${{ matrix.repo-name }}
      REPO_OWNER: ${{ matrix.repo-owner }}
    steps:          
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Build Red Hat Bundle
        run: |
          IMAGE_NAME_DIGEST=docker.io/cheels/${OPERATOR_NAME}@sha256:c47518440412e86d3cf195967212ac2ca39774ed2c3dfd780ce8cc07df33ea1a
          make bundle IMG=${IMAGE_NAME_DIGEST} VERSION=5.13.0
          cat >> ./bundle/metadata/annotations.yaml <<EOF
            # OpenShift annotations.
            com.redhat.openshift.versions: v4.8
            operators.operatorframework.io.bundle.channel.default.v1: alpha
          EOF

      - name: Checkout to cheels/${{ env.REPO_NAME }}
        uses: actions/checkout@v4
        with:
          repository: cheels/${{ env.REPO_NAME }}
          path: ${{ env.REPO_NAME }}
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}
          
      - name: Create branch
        working-directory: ${{ env.REPO_NAME }}
        run: |
          git config user.email "alexander.borschuk@hazelcast.com"
          git config user.name "cheels"
          BRANCH_NAME=${OPERATOR_NAME}-${BUNDLE_RELEASE_VERSION}-${{ github.run_id }}
          git checkout -b $BRANCH_NAME
          if [ "${{ env.REPO_NAME }}" == "certified-operators" ]; then
            sed -i "s|merge: *[^ ]*|merge: false|" operators/${OPERATOR_NAME}/ci.yaml
          fi
          mkdir -p operators/${OPERATOR_NAME}/${BUNDLE_RELEASE_VERSION}
          cp -r ../bundle/* operators/${OPERATOR_NAME}/${BUNDLE_RELEASE_VERSION}/
          git add  ./operators/${OPERATOR_NAME}
          git commit --signoff -m "Update ${OPERATOR_NAME} to ${BUNDLE_RELEASE_VERSION}"
          git push -u origin $BRANCH_NAME

      - name: Create PR
        working-directory: ${{ env.REPO_NAME }}
        run: |
          echo ${{ secrets.DEVOPS_GITHUB_TOKEN }} | gh auth login --with-token
          gh pr create --title \
          "operator ${OPERATOR_NAME} (${BUNDLE_RELEASE_VERSION})" --body "" --repo ${REPO_OWNER}/${REPO_NAME} --base main
          if ! gh pr view ${{ github.event.pull_request.number }} &> /dev/null; then
              echo "Pull request ${{ github.event.pull_request.number }} not found, retrying in 10 seconds..."
              sleep 10
          fi
          if [ "${{ env.REPO_NAME }}" != "certified-operators" ]; then
            gh pr comment ${{ github.event.pull_request.number }} --body "/hold"
          fi

  validate_release:
    if: always()
    name: Approve/Reject release?
    needs: ['helm_chart_release', 'deploy_bundle']
    runs-on: ubuntu-latest
    environment: 'prod'
    steps:
      - run: ""

  enable-merge:
    name: Merge PR's
    needs: validate_release 
    if: always() && needs.validate_release.result == 'success'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - repo-name: community-operators
            repo-owner: cheels

          - repo-name: certified-operators
            repo-owner: cheels

          - repo-name: community-operators-prod
            repo-owner: cheels
            
          - repo-name: hazelcast-platform-operator
            repo-owner: cheels
    env:
      REPO_NAME: ${{ matrix.repo-name }}
      REPO_OWNER: ${{ matrix.repo-owner }}
      HELM_CHART_PR_NUMBER: ${{ needs.helm_chart_release.outputs.HELM_CHART_PR_NUMBER }}
    steps:
      - name: Checkout to cheels/${{ env.REPO_NAME }}
        uses: actions/checkout@v4
        with:
          repository: cheels/${{ env.REPO_NAME }}
          path: ${{ env.REPO_NAME }}
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}

      - name: Update main branch of the fork
        if: ${{ matrix.repo-name }} != 'hazelcast-platform-operator'
        working-directory: ${{ env.REPO_NAME }}
        run: |
          git checkout main
          git remote add upstream https://github.com/${REPO_OWNER}/${REPO_NAME}.git
          git pull upstream main
          git push origin main

      - name: Enable Auto-Merge For PR's
        if: ${{ matrix.repo-name }} != 'hazelcast-platform-operator'
        working-directory: ${{ env.REPO_NAME }}
        run: |
          echo ${{ secrets.DEVOPS_GITHUB_TOKEN }} | gh auth login --with-token
          BRANCH_NAME=${OPERATOR_NAME}-${BUNDLE_RELEASE_VERSION}-${{ github.run_id }}
          PR_NUMBER=$(gh pr list --repo ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }} --search "operator ${{ env.OPERATOR_NAME }} (${BUNDLE_RELEASE_VERSION})" --json number | jq -r '.[].number')
          if [ "${{ env.REPO_NAME }} == "certified-operators" ]; then
              git checkout $BRANCH_NAME
              sed -i "s|merge: *[^ ]*|merge: true|" operators/${OPERATOR_NAME}/ci.yaml
              git add  ./operators/${OPERATOR_NAME}
              git commit --signoff -m "Update ${OPERATOR_NAME} to ${BUNDLE_RELEASE_VERSION}"
              git push -u origin $BRANCH_NAME
            elif [ "${{ env.REPO_NAME }}" != "certified-operators" ]; then
              gh pr comment $PR_NUMBER --body "/hold cancel"
            fi

      - name: Checkout to cheels/hazelcast-platform-operator
        if: ${{ matrix.repo-name }} == 'hazelcast-platform-operator'
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
          token: ${{ secrets.DEVOPS_GITHUB_TOKEN }}

      - name: Merge Helm Chart PR
        working-directory: ${{ env.REPO_NAME }}
        if: ${{ matrix.repo-name }} == 'hazelcast-platform-operator'
        run: |
          echo ${{ secrets.DEVOPS_GITHUB_TOKEN }} | gh auth login --with-token
          gh pr merge $HELM_CHART_PR_NUMBER --admin
          
  restore-publish:
    name: Revert Release Changes
    needs: validate_release
    if: always() && needs.validate_release.result == 'failure'
    env:
      HELM_CHART_PR_NUMBER: ${{ needs.helm_chart_release.outputs.HELM_CHART_PR_NUMBER }}
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Remove ALL
        run: |
          echo ${{ secrets.DEVOPS_GITHUB_TOKEN }} | gh auth login --with-token
          BRANCH_NAME=${OPERATOR_NAME}-${BUNDLE_RELEASE_VERSION}-${{ github.run_id }}
          for REPO in "cheels/certified-operators" "cheels/community-operators" "cheels/community-operators-prod"; do   
             git push origin --delete $BRANCH_NAME
          done
            gh pr close $HELM_CHART_PR_NUMBER--repo cheels/hazelcast-platform-operator --delete-branch 2>/dev/null

